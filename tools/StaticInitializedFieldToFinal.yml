tool_id: "walkmod-sonar:StaticInitializedFieldToFinal"
extensions: ["java"]
tags: ["java"]

command: "walkmod apply sonar:StaticInitializedFieldToFinal -i #{filename}"

pr_title: "'public static' fields should be constant"
pr_body: |
  There is no good reason to declare a field `public` and `static` without also declaring it `final`.
  Most of the time this is a kludge to share a state among several objects.
  But with this approach, any object can do whatever it wants with the shared state, such as setting it to `null`.

  ## Noncompliant Code Example

  ```java
  public class Greeter {
    public static Foo foo = new Foo();
    ...
  }
  ```

  ## Compliant Solution

  ```java
  public class Greeter {
    public static final Foo FOO = new Foo();
    ...
  }
  ```

  See also: [SonarQube S1444](https://rules.sonarsource.com/java/RSPEC-1444).
